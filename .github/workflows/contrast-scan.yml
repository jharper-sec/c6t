# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will initiate a Contrast Scan on your built artifact, and subsequently upload the results SARIF to Github.
# Because Contrast Scan is designed to run against your deployable artifact, you need to build an artifact that will be passed to the Contrast Scan Action.
# Contrast Scan currently supports Java, JavaScript and .NET artifacts.
# For more information about the Contrast Scan GitHub Action see here: https://github.com/Contrast-Security-OSS/contrastscan-action

# Pre-requisites:
# All Contrast related account secrets should be configured as GitHub secrets to be passed as inputs to the Contrast Scan Action.
# The required secrets are CONTRAST_API_KEY, CONTRAST_ORGANIZATION_ID and CONTRAST_AUTH_HEADER.

on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]
  schedule:
    - cron: '39 4 * * 4'

permissions:
  contents: read

name: Scan analyze workflow
jobs:
  build-and-scan:
    permissions:
        contents: read # for actions/checkout
        security-events: write # for github/codeql-action/upload-sarif
        actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    # check out project
    steps:
    - uses: actions/checkout@v4
    - name: Set up contrast-cli
      run: |
        npm install --location=global @contrast/contrast@2.0.0
    - name: Scan file
      run: |
        contrast-cli --scan ./ \
          --api_key ${{ secrets.CONTRAST__API__API_KEY }} \
          --authorization ${{ secrets.CONTRAST__API__AUTH_TOKEN }} \
          --organization_id ${{ secrets.CONTRAST__API__ORGANIZATION_ID }} \
          --host ${{ secrets.CONTRAST__API__URL }} \
          --project_name c6t-cli \
          --language Python --wait_for_scan
